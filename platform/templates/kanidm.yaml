{{- if .Values.kanidm.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-kanidm
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: {{ .Values.kanidm.namespace }}
  source:
    repoURL: https://bjw-s.github.io/helm-charts
    chart: app-template
    targetRevision: 3.0.4
    helm:
      releaseName: kanidm
      values: |
        controllers:
          main:
            type: statefulset
            containers:
              main:
                image:
                  repository: docker.io/kanidm/server
                  tag: 1.1.0-rc.15
            statefulset:
              volumeClaimTemplates:
                - name: data
                  size: 1Gi
                  globalMounts:
                    - path: /data
                  accessMode: "ReadWriteOnce"
        configMaps:
          config:
            enabled: true
            data:
              server.toml: |
                bindaddress = "[::]:443"
                ldapbindaddress = "[::]:636"
                # trust_x_forward_for = false
                db_path = "/data/kanidm.db"
                tls_chain = "/data/ca.crt"
                tls_key = "/data/tls.key"
                domain = "auth.{{ .Values.global.domain }}"
                origin = "https://auth.{{ .Values.global.domain }}"
        service:
          main:
            ports:
              http:
                enabled: false
              https:
                port: 443
                protocol: HTTPS
              ldap:
                port: 636
                protocol: TCP
        ingress:
          main:
            enabled: true
            className: nginx
            annotations:
              nginx.ingress.kubernetes.io/backend-protocol: HTTPS
              cert-manager.io/cluster-issuer: letsencrypt-prod
              external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
              external-dns.alpha.kubernetes.io/target: {{ .Values.global.env }}-humble-tunnel.{{ .Values.global.domain }}
            hosts:
              - host: &host auth.{{ .Values.global.domain }}
                paths:
                  - path: /
                    pathType: Prefix
                    service:
                      name: main
                      port: https
            tls:
              - hosts:
                  - *host
                secretName: kanidm-tls-certificate
        persistence:
          config:
            enabled: true
            type: configMap
            name: kanidm-config
            globalMounts:
              - path: /data/server.toml
                subPath: server.toml
          tls:
            enabled: true
            type: secret
            name: kanidm-selfsigned-certificate
            globalMounts:
              - path: /data/ca.crt
                subPath: ca.crt
              - path: /data/tls.key
                subPath: tls.key
---
# TODO https://github.com/kanidm/kanidm/issues/1227
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kanidm-selfsigned
  namespace: {{ .Values.kanidm.namespace }}
spec:
  secretName: kanidm-selfsigned-certificate
  issuerRef:
    kind: Issuer
    name: kanidm-selfsigned
  dnsNames:
    - home.arpa
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kanidm-selfsigned
  namespace: {{ .Values.kanidm.namespace }}
spec:
  selfSigned: {}
{{- end }}
