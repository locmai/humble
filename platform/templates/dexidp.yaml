{{- if .Values.dex.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-dex
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: dex
  source:
    repoURL: https://charts.dexidp.io
    chart: dex
    targetRevision: 0.17.1
    helm:
      releaseName: dex
      values: |
        envFrom:
          - secretRef:
              name: dex-secrets
        ingress:
          enabled: true
          className: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
            external-dns.alpha.kubernetes.io/target: {{ .Values.global.env }}-humble-tunnel.{{ .Values.global.domain }}
          hosts:
            - host: &host dex.{{ .Values.global.domain }}
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            - secretName: dex-tls-certificate
              hosts:
                - *host
        config:
          issuer: https://dex.{{ .Values.global.domain }}
          storage:
            type: kubernetes
            config:
              inCluster: true
          oauth2:
            skipApprovalScreen: true
          connectors:
            - type: oidc
              id: kanidm
              name: Kanidm
              config:
                clientID: $KANIDM_CLIENT_ID
                clientSecret: $KANIDM_CLIENT_SECRET
                redirectURI: https://dex.{{ .Values.global.domain }}/callback
                issuer: https://auth.{{ .Values.global.domain }}/oauth2/openid/dex
                scopes:
                  - openid
                  - profile
                  - email
                  - groups
          staticClients:
            - id: grafana-sso
              name: Grafana
              redirectURIs:
                - 'https://grafana.{{ .Values.global.domain }}/login/generic_oauth'
              secretEnv: GRAFANA_SSO_CLIENT_SECRET
            - id: argocd-sso
              name: ArgoCD
              redirectURIs:
                - 'https://argocd.{{ .Values.global.domain }}/auth/callback'
              secretEnv: ARGOCD_SSO_CLIENT_SECRET
            - id: oauth2-proxy-sso
              name: 'OAuth2 Proxy'
              redirectURIs:
                - 'https://oauth2.{{ .Values.global.domain }}/oauth2/callback'
                - 'https://speedtest.{{ .Values.global.domain }}/oauth2/callback'
                - 'https://coroot.{{ .Values.global.domain }}/oauth2/callback'
              secretEnv: OAUTH2_PROXY_SSO_CLIENT_SECRET
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex-secrets
  namespace: dex
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: global-secrets
  target:
    name: dex-secrets
  data:
    # Connectors
    - secretKey: KANIDM_CLIENT_ID
      remoteRef:
        key: kanidm.dex
        property: client_id
    - secretKey: KANIDM_CLIENT_SECRET
      remoteRef:
        key: kanidm.dex
        property: client_secret
    # Clients
    - secretKey: GRAFANA_SSO_CLIENT_SECRET
      remoteRef:
        key: dex.grafana
        property: client_secret
    - secretKey: ARGOCD_SSO_CLIENT_SECRET
      remoteRef:
        key: dex.argocd
        property: client_secret
    - secretKey: OAUTH2_PROXY_SSO_CLIENT_SECRET
      remoteRef:
        key: dex.oauth2proxy
        property: client_secret
    - secretKey: OAUTH2_PROXY_SSO_COOKIE_SECRET
      remoteRef:
        key: dex.oauth2proxy
        property: cookie_secret
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-sso-secrets
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: argocd
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: global-secrets
  target:
    name: argocd-sso-secrets
  data:
    - secretKey: ARGOCD_SSO_CLIENT_SECRET
      remoteRef:
        key: dex.argocd
        property: client_secret
{{- end }}
