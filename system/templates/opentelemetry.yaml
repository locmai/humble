{{- if .Values.opentelemetry.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-opentelemetry
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: {{ .Values.opentelemetry.namespace }}
  source:
    chart: opentelemetry-collector
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    targetRevision: 0.92.0
    helm:
      releaseName: opentelemetry-collector
      values: |
        mode: "daemonset"
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        config:
          receivers:
            statsd:
              endpoint: "0.0.0.0:8127"
              aggregation_interval: 5s
              enable_metric_type: true
              is_monotonic_counter: true
              timer_histogram_mapping:
                - statsd_type: "histogram"
                  observer_type: "gauge"
                - statsd_type: "timing"
                  observer_type: "gauge"
            carbon:
              endpoint: "0.0.0.0:2003"
              transport: tcp
          exporters:
            loki:
              endpoint: http://loki-stack.observability:3100/loki/api/v1/push
            prometheus:
              endpoint: "0.0.0.0:9090"
              send_timestamps: true
              metric_expiration: 180m
              resource_to_telemetry_conversion:
                enabled: true
          service:
            telemetry:
              metrics:
                address: 0.0.0.0:8888
            extensions:
              - health_check
              - memory_ballast
            pipelines:
              logs:
                exporters:
                  - loki
                processors:
                  - memory_limiter
                  - batch
                receivers:
                  - otlp
              metrics:
                exporters:
                  - prometheus
                processors:
                  - memory_limiter
                  - batch
                receivers:
                  - otlp
                  - prometheus
                  - statsd
                  - carbon
        ports:
          metrics:
            enabled: true
            containerPort: 8888
            servicePort: 8888
            protocol: TCP
          prometheus:
            enabled: true
            containerPort: 9090
            servicePort: 9090
            protocol: TCP
    
        podMonitor:
          enabled: true
          metricsEndpoints:
            - port: prometheus
{{- end }}
