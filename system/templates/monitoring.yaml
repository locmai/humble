{{- if .Values.monitoring.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-secrets
  namespace: {{ .Values.monitoring.namespace }}
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: global-secrets
  target:
    name: grafana-secrets
  data:
    - secretKey: GRAFANA_SSO_CLIENT_SECRET
      remoteRef:
        key: dex.grafana
        property: client_secret
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-monitoring
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  destination:
    name: in-cluster
    namespace: {{ .Values.monitoring.namespace }}
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 57.2.0
    helm:
      releaseName: monitoring
      values: |
        prometheus:
          prometheusSpec:
            replicas: 1
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}
            podMonitorNamespaceSelector: {}

            retention: 7d

            # https://github.com/prometheus-community/helm-charts/issues/2506#issuecomment-1304632868
            # enableFeatures:
            # - agent
            containers:
            - name: prometheus
              env:
              - name: JAEGER_AGENT_PORT
                value: "5755"
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 5Gi
          server:
            enableServiceLinks: false

        prometheusOperator:
          admissionWebhooks:
            enabled: false
            failurePolicy: Ignore
            patch:
              enabled: false
          tls:
            enabled: false
          denyNamespaces:
            - 'notreal'
        grafana:
          enabled: true
          replicas: 1
          enableServiceLinks: false
          env:
            JAEGER_AGENT_PORT: '5755'
          envFromSecret: "grafana-secrets"
          persistence:
            enabled: false
          ingress:
            enabled: false
          plugins:
          - grafana-oncall-app
          grafana.ini:
            security:
              disable_initial_admin_creation: true
            server:
              domain: "grafana.{{ .Values.global.domain }}"
              root_url: "https://%(domain)s/"
            auth:
              disable_login_form: false
            auth.generic_oauth:
              name: Dex
              enabled: true
              role_attribute_path: 'GrafanaAdmin'
              allow_assign_grafana_admin: true
              groups_attribute_path: info.groups
              allow_sign_up: true
              client_id: "grafana-sso"
              client_secret: $__env{GRAFANA_SSO_CLIENT_SECRET}
              scopes: openid profile email groups
              auth_url: "https://dex.{{ .Values.global.domain }}/auth"
              token_url: "https://dex.{{ .Values.global.domain }}/token"
              api_url: "https://dex.{{ .Values.global.domain }}/userinfo"
          sidecar:
            enableUniqueFilenames: false
            dashboards:
              enabled: true
              label: grafana_dashboard
              folder: /tmp/dashboards
              searchNamespace: {{ .Values.monitoring.namespace }}
              provider:
                allowUiUpdates: false
                foldersFromFilesStructure: true
              annotations:
                k8s-sidecar-target-directory: "/tmp/dashboards/kubernetes"
          additionalDataSources:
            - name: loki
              type: loki
              editable: false
              url: http://loki-stack:3100
              isDefault: false
            - name: default
              type: prometheus
              editable: false
              url: http://monitoring-kube-prometheus-prometheus.observability:9090/
              isDefault: false
        alertmanager:
          enabled: false
{{- end }}
